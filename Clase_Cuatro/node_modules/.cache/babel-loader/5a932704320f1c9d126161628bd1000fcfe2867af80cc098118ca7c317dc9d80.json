{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cesar\\\\Documents\\\\Proyectos\\\\Cesar_Londono_React\\\\Clase_Cuatro\\\\src\\\\Components\\\\Styles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CharacterCard from './CharacterCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RickAndMortyCharacterCard({\n  ids\n}) {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedCharacters = await Promise.all(ids.map(id => fetch(`https://rickandmortyapi.com/api/character/${id}`).then(response => response.json())));\n      setCharacters(fetchedCharacters);\n    };\n    fetchData();\n  }, [ids]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"characters-container\",\n    children: characters.map(character => /*#__PURE__*/_jsxDEV(CharacterCard, {\n      name: character.name,\n      image: character.image,\n      genre: character.gender,\n      status: character.status\n    }, character.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(RickAndMortyCharacterCard, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = RickAndMortyCharacterCard;\nexport default RickAndMortyCharacterCard;\nvar _c;\n$RefreshReg$(_c, \"RickAndMortyCharacterCard\");","map":{"version":3,"names":["React","useState","useEffect","CharacterCard","jsxDEV","_jsxDEV","RickAndMortyCharacterCard","ids","_s","characters","setCharacters","fetchData","fetchedCharacters","Promise","all","map","id","fetch","then","response","json","className","children","character","name","image","genre","gender","status","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Cesar/Documents/Proyectos/Cesar_Londono_React/Clase_Cuatro/src/Components/Styles.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CharacterCard from './CharacterCard';\r\n\r\nfunction RickAndMortyCharacterCard({ ids }) {\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fetchedCharacters = await Promise.all(\r\n        ids.map(id => \r\n          fetch(`https://rickandmortyapi.com/api/character/${id}`)\r\n            .then(response => response.json())\r\n        )\r\n      );\r\n      setCharacters(fetchedCharacters);\r\n    };\r\n\r\n    fetchData();\r\n  }, [ids]);\r\n\r\n  return (\r\n    <div className=\"characters-container\">\r\n      {characters.map(character => (\r\n        <CharacterCard\r\n          key={character.id}\r\n          name={character.name}\r\n          image={character.image}\r\n          genre={character.gender}\r\n          status={character.status}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RickAndMortyCharacterCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,yBAAyBA,CAAC;EAAEC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,iBAAiB,GAAG,MAAMC,OAAO,CAACC,GAAG,CACzCP,GAAG,CAACQ,GAAG,CAACC,EAAE,IACRC,KAAK,CAAC,6CAA6CD,EAAE,EAAE,CAAC,CACrDE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CACrC,CACF,CAAC;MACDV,aAAa,CAACE,iBAAiB,CAAC;IAClC,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,GAAG,CAAC,CAAC;EAET,oBACEF,OAAA;IAAKgB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,EAClCb,UAAU,CAACM,GAAG,CAACQ,SAAS,iBACvBlB,OAAA,CAACF,aAAa;MAEZqB,IAAI,EAAED,SAAS,CAACC,IAAK;MACrBC,KAAK,EAAEF,SAAS,CAACE,KAAM;MACvBC,KAAK,EAAEH,SAAS,CAACI,MAAO;MACxBC,MAAM,EAAEL,SAAS,CAACK;IAAO,GAJpBL,SAAS,CAACP,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKlB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACxB,EAAA,CA9BQF,yBAAyB;AAAA2B,EAAA,GAAzB3B,yBAAyB;AAgClC,eAAeA,yBAAyB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}